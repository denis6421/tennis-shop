{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/tennis-shop/client/src/components/parts/bread-crumbs/BreadCrumbs.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./bread-crumbs.css\";\nimport KeyboardArrowRightRoundedIcon from \"@material-ui/icons/KeyboardArrowRightRounded\";\nimport text from \"../../../data/text\";\nimport { HOME_ROUTE, CATEGORY_PRODUCTS, PRODUCTS_ROUTE } from \"../../../tools/routes\";\n\nclass BreadCrumbs extends Component {\n  constructor() {\n    super();\n\n    this.createBreadCrumbsData = () => {\n      const _this$props = this.props,\n            product_name = _this$props.product_name,\n            category = _this$props.category;\n      let type = this.props.match.params.product_type;\n      let category_type = category ? category : this.props.match.params.category_type;\n      const data = [{\n        text: \"Home\",\n        url: HOME_ROUTE\n      }, category_type && text[category_type] ? {\n        text: text[category_type].text,\n        url: text[category_type].url.replace(\":category_type\", category_type)\n      } : \"\", type && text[type] ? {\n        text: type ? text[type].text : \"\",\n        url: category_type ? CATEGORY_PRODUCTS.replace(\":category_type\", category_type ? category_type : \"\").replace(\":product_type\", type) : PRODUCTS_ROUTE.replace(\":product_type\", type)\n      } : \"\", product_name ? {\n        text: product_name\n      } : \"\"];\n      this.setState({\n        data\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.createBreadCrumbsData();\n  }\n\n  render() {\n    const data = this.state.data;\n    return data && data.length > 0 && data.filter(m => m.text).length > 1 ? React.createElement(\"div\", {\n      className: \"bread__crumbs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, data.filter(m => m.text).map((m, i) => {\n      if (m.url) {\n        return React.createElement(\"span\", {\n          key: i,\n          className: \"bread__crumbs__element flex__center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: m.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, m.text), m.text ? React.createElement(KeyboardArrowRightRoundedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }) : \"\");\n      } else {\n        return React.createElement(\"span\", {\n          key: i,\n          className: \"bread__crumbs__element flex__center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          to: m.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, m.text), m.text ? React.createElement(KeyboardArrowRightRoundedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }) : \"\");\n      }\n    })) : \"\";\n  }\n\n}\n\nexport default withRouter(BreadCrumbs);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/components/parts/bread-crumbs/BreadCrumbs.jsx"],"names":["React","Component","Link","withRouter","KeyboardArrowRightRoundedIcon","text","HOME_ROUTE","CATEGORY_PRODUCTS","PRODUCTS_ROUTE","BreadCrumbs","constructor","createBreadCrumbsData","props","product_name","category","type","match","params","product_type","category_type","data","url","replace","setState","state","componentDidMount","render","length","filter","m","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./bread-crumbs.css\";\nimport KeyboardArrowRightRoundedIcon from \"@material-ui/icons/KeyboardArrowRightRounded\";\nimport text from \"../../../data/text\";\nimport {\n  HOME_ROUTE,\n  CATEGORY_PRODUCTS,\n  PRODUCTS_ROUTE,\n} from \"../../../tools/routes\";\nclass BreadCrumbs extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.createBreadCrumbsData();\n  }\n  createBreadCrumbsData = () => {\n    const { product_name, category } = this.props;\n    let type = this.props.match.params.product_type;\n    let category_type = category\n      ? category\n      : this.props.match.params.category_type;\n\n    const data = [\n      {\n        text: \"Home\",\n        url: HOME_ROUTE,\n      },\n      category_type && text[category_type]\n        ? {\n            text: text[category_type].text,\n            url: text[category_type].url.replace(\n              \":category_type\",\n              category_type\n            ),\n          }\n        : \"\",\n      type && text[type]\n        ? {\n            text: type ? text[type].text : \"\",\n            url: category_type\n              ? CATEGORY_PRODUCTS.replace(\n                  \":category_type\",\n                  category_type ? category_type : \"\"\n                ).replace(\":product_type\", type)\n              : PRODUCTS_ROUTE.replace(\":product_type\", type),\n          }\n        : \"\",\n      product_name\n        ? {\n            text: product_name,\n          }\n        : \"\",\n    ];\n\n    this.setState({\n      data,\n    });\n  };\n  render() {\n    const { data } = this.state;\n    return data && data.length > 0 && data.filter((m) => m.text).length > 1 ? (\n      <div className=\"bread__crumbs\">\n        {data\n          .filter((m) => m.text)\n          .map((m, i) => {\n            if (m.url) {\n              return (\n                <span \n                key = {i}\n                className=\"bread__crumbs__element flex__center\">\n                  <Link to={m.url}>{m.text}</Link>\n                  {m.text ? <KeyboardArrowRightRoundedIcon /> : \"\"}\n                </span>\n              );\n            } else {\n              return (\n                <span \n                \n                key = {i}\n                className=\"bread__crumbs__element flex__center\">\n                  <p to={m.url}>{m.text}</p>\n                  {m.text ? <KeyboardArrowRightRoundedIcon /> : \"\"}\n                </span>\n              );\n            }\n          })}\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nexport default withRouter(BreadCrumbs);\n"]},"metadata":{},"sourceType":"module"}