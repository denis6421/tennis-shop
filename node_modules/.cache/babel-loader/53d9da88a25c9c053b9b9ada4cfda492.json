{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/tennis-shop/client/src/components/parts/bread-crumbs/BreadCrumbs.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './bread-crumbs.css';\nimport KeyboardArrowRightRoundedIcon from '@material-ui/icons/KeyboardArrowRightRounded';\nimport text from '../../../data/text';\nimport { HOME_ROUTE, CATEGORY_PRODUCTS, PRODUCTS_ROUTE } from '../../../tools/routes';\n\nclass BreadCrumbs extends Component {\n  constructor() {\n    super();\n\n    this.createBreadCrumbsData = () => {\n      const _this$props = this.props,\n            product_name = _this$props.product_name,\n            category = _this$props.category;\n      console.log(product_name);\n      let type = this.props.match.params.product_type;\n      let category_type = category ? category : this.props.match.params.category_type;\n      const data = [{\n        text: 'Home',\n        url: HOME_ROUTE\n      }, category_type && text[category_type] ? {\n        text: text[category_type].text,\n        url: text[category_type].url.replace(':category_type', category_type)\n      } : '', type && text[type] ? {\n        text: type ? text[type].text : '',\n        url: category_type ? CATEGORY_PRODUCTS.replace(':category_type', category_type ? category_type : '').replace(':product_type', type) : PRODUCTS_ROUTE.replace(':product_type', type)\n      } : '', product_name ? {\n        text: product_name\n      } : ''];\n      this.setState({\n        data\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.createBreadCrumbsData();\n  }\n\n  render() {\n    const data = this.state.data;\n    return data && data.length > 0 && data.filter(m => m.text).length > 1 ? React.createElement(\"div\", {\n      className: \"bread__crumbs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, data.filter(m => m.text).map(m => {\n      if (m.url) {\n        return React.createElement(\"span\", {\n          className: \"bread__crumbs__element flex__center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: m.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, m.text), m.text ? React.createElement(KeyboardArrowRightRoundedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }) : '');\n      } else {\n        return React.createElement(\"span\", {\n          className: \"bread__crumbs__element flex__center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          to: m.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, m.text), m.text ? React.createElement(KeyboardArrowRightRoundedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }) : '');\n      }\n    })) : '';\n  }\n\n}\n\nexport default withRouter(BreadCrumbs);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/components/parts/bread-crumbs/BreadCrumbs.jsx"],"names":["React","Component","Link","withRouter","KeyboardArrowRightRoundedIcon","text","HOME_ROUTE","CATEGORY_PRODUCTS","PRODUCTS_ROUTE","BreadCrumbs","constructor","createBreadCrumbsData","props","product_name","category","console","log","type","match","params","product_type","category_type","data","url","replace","setState","state","componentDidMount","render","length","filter","m","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport './bread-crumbs.css'\nimport KeyboardArrowRightRoundedIcon from '@material-ui/icons/KeyboardArrowRightRounded';\nimport text from '../../../data/text';\nimport { HOME_ROUTE,  CATEGORY_PRODUCTS, PRODUCTS_ROUTE } from '../../../tools/routes';\nclass BreadCrumbs extends Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n\n    componentDidMount() {\n        this.createBreadCrumbsData()\n    }\n    createBreadCrumbsData = () => {\n        const { product_name, category } = this.props\n        console.log(product_name)\n        let type = this.props.match.params.product_type\n        let category_type = category ? category : this.props.match.params.category_type\n\n        const data = [\n            {\n                text: 'Home',\n                url: HOME_ROUTE,\n            },\n            category_type  && text[category_type] ?\n                {\n                    text: text[category_type].text,\n                    url: text[category_type].url.replace(':category_type', category_type),\n                } : '',\n            type && text[type] ? {\n                text: type ? text[type].text : '',\n                url:\n                    category_type ? CATEGORY_PRODUCTS\n                        .replace(':category_type', category_type ? category_type : '')\n                        .replace(':product_type', type) :\n                        PRODUCTS_ROUTE\n                            .replace(':product_type', type)\n            } : '',\n            product_name ? {\n                text: product_name\n            } : ''\n        ]\n\n\n\n\n        this.setState({\n            data\n        })\n\n    }\n    render() {\n        const { data } = this.state\n        return (\n            data &&\n                data.length > 0 &&\n                data.filter(m => m.text).length > 1 ?\n                <div className='bread__crumbs'>\n\n                    {data.filter(m => m.text).map(m => {\n                        if (m.url) {\n                            return <span\n                                className='bread__crumbs__element flex__center'\n                            >\n                                <Link\n                                    to={m.url}\n                                >\n                                    {m.text}\n                                </Link>\n                                {m.text ? <KeyboardArrowRightRoundedIcon /> : ''}\n                            </span>\n                        } else {\n                            return <span\n                                className='bread__crumbs__element flex__center'\n                            >\n                                <p\n                                    to={m.url}\n                                >\n                                    {m.text}\n                                </p>\n                                {m.text ? <KeyboardArrowRightRoundedIcon /> : ''}\n                            </span>\n                        }\n\n                    })}\n\n                </div> : ''\n        );\n    }\n}\n\nexport default withRouter(BreadCrumbs);\n"]},"metadata":{},"sourceType":"module"}