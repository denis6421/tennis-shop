{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/tennis-shop/client/src/components/cart/CartPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport { withRouter } from 'react-router-dom';\nimport CartPageProduct from './parts/CartPageProduct';\nimport NumberFormat from 'react-number-format';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport StatusPopup from '../parts/add-success/StatusPopup';\nimport MoodIcon from '@material-ui/icons/Mood';\nconst popup_text = ['This is only a demo, so no payment is made here :)'];\n\nconst calcTotal = arr => {\n  let total = arr.reduce((acc, pilot) => acc + pilot.total, 0);\n  return total >= 0 ? total : 0;\n};\n\nclass CartPage extends Component {\n  constructor() {\n    super();\n\n    this.togglePopup = val => {\n      this.setState({\n        popup: val\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.setDataToCartReducer('show_cart', false);\n    const body = document.querySelector('body');\n    body.style.overflow = 'auto';\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const cart_list = this.props.cart_reducer.cart_list;\n    const popup = this.state.popup;\n    return React.createElement(\"div\", {\n      className: \"cart__page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(StatusPopup, {\n      with_overlay: true,\n      title: popup_text,\n      handleFunction: this.togglePopup,\n      svg: React.createElement(MoodIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      button_text: \"CLOSE\",\n      active: popup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"cart__page__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, cart_list && cart_list.length > 0 ? cart_list.map(m => {\n      return React.createElement(CartPageProduct, {\n        product: m,\n        key: m.cart_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }) : React.createElement(\"span\", {\n      className: \"empty__cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"YOUR SHOPPING CART IS EMPTY\"), React.createElement(\"figure\", {\n      className: \"flex__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", React.createElement(ShoppingCartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), calcTotal(cart_list) ? React.createElement(\"div\", {\n      className: \"car__page__total flex__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"flex__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"TOTAL\"), cart_list && cart_list.length > 0 ? React.createElement(NumberFormat, {\n      decimalScale: \"2\",\n      decimalSeparator: \".\",\n      value: calcTotal(cart_list),\n      displayType: 'text',\n      thousandSeparator: true,\n      prefix: '$',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : ''), React.createElement(\"button\", {\n      onClick: () => this.togglePopup(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"CONTINUE\"))) : null);\n  }\n\n}\n\nfunction mapStateToProps({\n  cart_reducer\n}) {\n  return {\n    cart_reducer\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(CartPage));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/components/cart/CartPage.jsx"],"names":["React","Component","connect","actions","withRouter","CartPageProduct","NumberFormat","ShoppingCartIcon","StatusPopup","MoodIcon","popup_text","calcTotal","arr","total","reduce","acc","pilot","CartPage","constructor","togglePopup","val","setState","popup","state","componentDidMount","props","setDataToCartReducer","body","document","querySelector","style","overflow","window","scrollTo","render","cart_list","cart_reducer","length","map","m","cart_id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,MAAMC,UAAU,GAAG,CAAC,oDAAD,CAAnB;;AAEA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,MAAIC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAK,CAACH,KAAvC,EAA8C,CAA9C,CAAZ;AACA,SAAOA,KAAK,IAAI,CAAT,GAAaA,KAAb,GAAqB,CAA5B;AACH,CAHD;;AAKA,MAAMI,QAAN,SAAuBhB,SAAvB,CAAiC;AAC7BiB,EAAAA,WAAW,GAAG;AACV;;AADU,SAadC,WAbc,GAaCC,GAAD,IAAS;AACnB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAACF;AADI,OAAd;AAGH,KAjBa;;AAEV,SAAKG,KAAL,GAAa,EAAb;AAEH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,oBAAX,CAAgC,WAAhC,EAA6C,KAA7C;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,MAAtB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;;AAMDC,EAAAA,MAAM,GAAG;AAAA,UACGC,SADH,GACiB,KAAKV,KAAL,CAAWW,YAD5B,CACGD,SADH;AAAA,UAEEb,KAFF,GAEW,KAAKC,KAFhB,CAEED,KAFF;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,WAAD;AACG,MAAA,YAAY,EAAE,IADjB;AAEG,MAAA,KAAK,EAAEZ,UAFV;AAGG,MAAA,cAAc,EAAE,KAAKS,WAHxB;AAIG,MAAA,GAAG,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAKG,MAAA,WAAW,EAAC,OALf;AAMG,MAAA,MAAM,EAAEG,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EASI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQa,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,GACIF,SAAS,CAACG,GAAV,CAAcC,CAAC,IAAI;AACf,aAAO,oBAAC,eAAD;AACH,QAAA,OAAO,EAAEA,CADN;AAEH,QAAA,GAAG,EAAEA,CAAC,CAACC,OAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAIH,KALD,CADJ,GAMS;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADC,EAED;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CAFC,CARjB,CATJ,EAuBK7B,SAAS,CAACwB,SAAD,CAAT,GAAuB;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACpB;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKA,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,GACG,oBAAC,YAAD;AACI,MAAA,YAAY,EAAC,GADjB;AAEI,MAAA,gBAAgB,EAAC,GAFrB;AAGI,MAAA,KAAK,EAAE1B,SAAS,CAACwB,SAAD,CAHpB;AAII,MAAA,WAAW,EAAE,MAJjB;AAKI,MAAA,iBAAiB,EAAE,IALvB;AAMI,MAAA,MAAM,EAAE,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAQK,EAVV,CAFJ,EAcI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKhB,WAAL,CAAiB,IAAjB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,CADoB,CAAvB,GAiBQ,IAxCb,CADJ;AA4CH;;AAlE4B;;AAuEjC,SAASsB,eAAT,CAAyB;AAAEL,EAAAA;AAAF,CAAzB,EAA2C;AACvC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH;;AAED,eAAehC,UAAU,CAACF,OAAO,CAACuC,eAAD,EAAkBtC,OAAlB,CAAP,CAAkCc,QAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport * as actions from '../../actions/actions'\nimport { withRouter } from 'react-router-dom';\nimport CartPageProduct from './parts/CartPageProduct';\nimport NumberFormat from 'react-number-format';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport StatusPopup from '../parts/add-success/StatusPopup';\nimport MoodIcon from '@material-ui/icons/Mood';\nconst popup_text = ['This is only a demo, so no payment is made here :)']\n\nconst calcTotal = (arr) => {\n    let total = arr.reduce((acc, pilot) => acc + pilot.total, 0)\n    return total >= 0 ? total : 0\n}\n\nclass CartPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n        }\n    }\n\n\n    componentDidMount() {\n        this.props.setDataToCartReducer('show_cart', false)\n        const body = document.querySelector('body')\n        body.style.overflow = 'auto'\n        window.scrollTo(0, 0)\n    }\n    togglePopup = (val) => {\n        this.setState({\n            popup:val\n        })\n    }\n    render() {\n        const { cart_list } = this.props.cart_reducer\n        const {popup} = this.state\n        return (\n            <div className='cart__page'>\n                 <StatusPopup\n                    with_overlay={true}\n                    title={popup_text}\n                    handleFunction={this.togglePopup}\n                    svg={<MoodIcon />}\n                    button_text='CLOSE'\n                    active={popup}\n                />\n                <ul className='cart__page__list'>\n                    {\n                        cart_list && cart_list.length > 0 ?\n                            cart_list.map(m => {\n                                return <CartPageProduct\n                                    product={m}\n                                    key={m.cart_id}\n                                />\n                            }) : <span className='empty__cart'>\n                                <h2>YOUR SHOPPING CART IS EMPTY</h2>\n                                <figure className='flex__center'> <ShoppingCartIcon /></figure>\n                            </span>\n                    }\n                </ul>\n                {calcTotal(cart_list) ? <div className='car__page__total flex__center'>\n                    <section className='flex__center'>\n\n                        <aside>\n                            <label>TOTAL</label>\n                            {cart_list && cart_list.length > 0 ?\n                                <NumberFormat\n                                    decimalScale='2'\n                                    decimalSeparator='.'\n                                    value={calcTotal(cart_list)}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                                    prefix={'$'} />\n                                : ''}\n                        </aside>\n                        <button onClick = {() => this.togglePopup(true)}>CONTINUE</button>\n                    </section>\n                </div> : null}\n            </div>\n        );\n    }\n}\n\n\n\nfunction mapStateToProps({ cart_reducer }) {\n    return { cart_reducer }\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(CartPage))\n"]},"metadata":{},"sourceType":"module"}