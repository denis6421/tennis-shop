{"ast":null,"code":"import * as queryString from 'query-string';\nexport const queryParamsToObject = params => {\n  let obj = queryString.parse(params);\n  Object.entries(obj).map(([key, value]) => {\n    obj[key] = Array.isArray(value) ? value : [value];\n  });\n  return obj;\n};\nexport const objectToQueryParams = obj => {\n  let string = '?';\n  string += queryString.stringify(obj);\n  return string;\n};\nexport const buildFilterQuery = filter => {\n  let query = {};\n\n  for (let keys in filter) {\n    if (filter[keys].constructor === Array && filter[keys].length > 0) {\n      query[keys] = filter[keys];\n    }\n  }\n\n  return query;\n};\nexport const filterList = (data, query) => {\n  const filteredData = data.filter(item => {\n    for (let key in query) {\n      if (item[key] === undefined) {\n        return false;\n      }\n\n      if (!Array.isArray(item[key])) {\n        if (!query[key].includes(item[key])) {\n          return false;\n        }\n      }\n\n      if (Array.isArray(item[key])) {\n        if (!item[key].some(r => query[key].indexOf(r) >= 0)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  });\n  return filteredData;\n};","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/functions/functions.js"],"names":["queryString","queryParamsToObject","params","obj","parse","Object","entries","map","key","value","Array","isArray","objectToQueryParams","string","stringify","buildFilterQuery","filter","query","keys","constructor","length","filterList","data","filteredData","item","undefined","includes","some","r","indexOf"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAGA,OAAO,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,MAAIC,GAAG,GAAGH,WAAW,CAACI,KAAZ,CAAkBF,MAAlB,CAAV;AACAG,EAAAA,MAAM,CAACC,OAAP,CAAeH,GAAf,EAAoBI,GAApB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACtCN,IAAAA,GAAG,CAACK,GAAD,CAAH,GAAWE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA1C;AAEH,GAHD;AAIA,SAAON,GAAP;AAEH,CARM;AAUP,OAAO,MAAMS,mBAAmB,GAAIT,GAAD,IAAS;AACxC,MAAIU,MAAM,GAAG,GAAb;AACAA,EAAAA,MAAM,IAAIb,WAAW,CAACc,SAAZ,CAAsBX,GAAtB,CAAV;AACA,SAAOU,MAAP;AACH,CAJM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,MAAD,IAAY;AACxC,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,IAAT,IAAiBF,MAAjB,EAAyB;AACrB,QAAIA,MAAM,CAACE,IAAD,CAAN,CAAaC,WAAb,KAA6BT,KAA7B,IAAsCM,MAAM,CAACE,IAAD,CAAN,CAAaE,MAAb,GAAsB,CAAhE,EAAmE;AAC/DH,MAAAA,KAAK,CAACC,IAAD,CAAL,GAAcF,MAAM,CAACE,IAAD,CAApB;AACH;AACJ;;AACD,SAAOD,KAAP;AACH,CARM;AAWP,OAAO,MAAMI,UAAU,GAAG,CAACC,IAAD,EAAOL,KAAP,KAAiB;AACvC,QAAMM,YAAY,GAAGD,IAAI,CAACN,MAAL,CAAaQ,IAAD,IAAU;AACvC,SAAK,IAAIhB,GAAT,IAAgBS,KAAhB,EAAuB;AACnB,UAAIO,IAAI,CAAChB,GAAD,CAAJ,KAAciB,SAAlB,EAA6B;AACzB,eAAO,KAAP;AACH;;AACD,UAAI,CAACf,KAAK,CAACC,OAAN,CAAca,IAAI,CAAChB,GAAD,CAAlB,CAAL,EAA+B;AAC3B,YAAI,CAACS,KAAK,CAACT,GAAD,CAAL,CAAWkB,QAAX,CAAoBF,IAAI,CAAChB,GAAD,CAAxB,CAAL,EAAqC;AACjC,iBAAO,KAAP;AACH;AACJ;;AACD,UAAIE,KAAK,CAACC,OAAN,CAAca,IAAI,CAAChB,GAAD,CAAlB,CAAJ,EAA8B;AAC1B,YAAG,CAACgB,IAAI,CAAChB,GAAD,CAAJ,CAAUmB,IAAV,CAAeC,CAAC,IAAGX,KAAK,CAACT,GAAD,CAAL,CAAWqB,OAAX,CAAmBD,CAAnB,KAAyB,CAA5C,CAAJ,EAAmD;AAC/C,iBAAO,KAAP;AACH;AACJ;AAEJ;;AACD,WAAO,IAAP;AACH,GAlBoB,CAArB;AAmBA,SAAOL,YAAP;AACH,CArBM","sourcesContent":["\nimport * as queryString from 'query-string'\n\n\nexport const queryParamsToObject = (params) => {\n    let obj = queryString.parse(params);\n    Object.entries(obj).map(([key, value]) => {\n        obj[key] = Array.isArray(value) ? value : [value]\n\n    })\n    return obj\n\n}\n\nexport const objectToQueryParams = (obj) => {\n    let string = '?'\n    string += queryString.stringify(obj);\n    return string\n}\n\n\nexport const buildFilterQuery = (filter) => {\n    let query = {};\n    for (let keys in filter) {\n        if (filter[keys].constructor === Array && filter[keys].length > 0) {\n            query[keys] = filter[keys];\n        }\n    }\n    return query\n}\n\n\nexport const filterList = (data, query) => {\n    const filteredData = data.filter((item) => {\n        for (let key in query) {\n            if (item[key] === undefined) {\n                return false;\n            }\n            if (!Array.isArray(item[key])) {\n                if (!query[key].includes(item[key])) {\n                    return false;\n                }\n            }\n            if (Array.isArray(item[key])) {\n                if(!item[key].some(r=> query[key].indexOf(r) >= 0)){\n                    return false\n                }\n            }\n\n        }\n        return true;\n    });\n    return filteredData\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}