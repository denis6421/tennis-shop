{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/tennis-shop/client/src/components/product-page/ProductPage.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport products_data from '../../data/data';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport './product-page.css';\nimport Incrementor from '../parts/incrementor/Incrementor';\nimport SelectBox from '../parts/selectbox/SelectBox';\nimport StatusPopup from '../parts/add-success/StatusPopup';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport BreadCrumbs from '../parts/bread-crumbs/BreadCrumbs';\nimport Fade from 'react-reveal/Fade';\n\nclass ProductPage extends Component {\n  constructor() {\n    super();\n\n    this.setProduct = product_id => {\n      window.scrollTo(0, 0);\n      let type = '';\n      let product;\n\n      if (product_id) {\n        Object.entries(products_data).forEach(([key, value]) => {\n          value.filter(m => {\n            if (m.id === product_id) {\n              type = key;\n              product = m;\n              product['amount'] = 1;\n              this.setState({\n                type,\n                product,\n                product_id\n              });\n            }\n          });\n        });\n      }\n    };\n\n    this.updateProduct = (name, value) => {\n      const product = this.state.product;\n\n      if (name === 'amount') {\n        this.setState({\n          amount: value\n        });\n      } else {\n        let product_to_add = JSON.parse(JSON.stringify(product));\n        product_to_add[name] = value;\n        this.setState({\n          product: product_to_add\n        });\n      }\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.closePopup = () => {\n      this.setState({\n        added: false,\n        amount: 1\n      });\n    };\n\n    this.addProduct = () => {\n      const _this$state = this.state,\n            product = _this$state.product,\n            amount = _this$state.amount;\n      const cart_list = this.props.cart_reducer.cart_list;\n      let product_to_add = JSON.parse(JSON.stringify(product));\n      product_to_add['amount'] = amount;\n\n      if (product.size && product.selected_size) {\n        this.props.addCartProducts(product, cart_list, amount);\n        this.setState({\n          added: true\n        });\n        this.updateProduct('selected_size', '');\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n\n      if (!product.size) {\n        this.props.addCartProducts(product, cart_list, amount);\n        this.setState({\n          added: true\n        });\n        this.updateProduct('selected_size', '');\n      }\n    };\n\n    this.state = {\n      amount: 1\n    };\n  }\n\n  componentDidMount() {\n    const product_id = this.props.match.params.product_id;\n    this.setProduct(product_id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const product_id = this.state.product_id;\n\n    if (nextProps.match.params.product_id !== product_id) {\n      this.setProduct(nextProps.match.params.product_id);\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          error = _this$state2.error,\n          product = _this$state2.product,\n          amount = _this$state2.amount,\n          added = _this$state2.added,\n          img_loaded = _this$state2.img_loaded;\n    return product ? React.createElement(\"div\", {\n      className: \"product__page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(BreadCrumbs, {\n      product_name: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(StatusPopup, {\n      with_overlay: true,\n      title: \"Product added to cart\",\n      handleFunction: this.closePopup,\n      svg: React.createElement(CheckCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }),\n      button_text: \"CLOSE\",\n      active: added,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"product__page__content flex__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      clear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"product__page__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.img,\n      alt: \"\",\n      style: {\n        opacity: img_loaded ? 1 : 0\n      },\n      onLoad: () => this.setState({\n        img_loaded: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"aside\", {\n      id: img_loaded ? 'figure__img__loader--disabled' : '',\n      className: \"figure__img__loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(Fade, {\n      clear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"product__page__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, product.title), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"$\".concat(product.price)), product.size ? React.createElement(SelectBox, {\n      property_name: \"selected_size\",\n      value: product.selected_size,\n      select: this.updateProduct,\n      options: product.size ? product.size : [],\n      error: error,\n      updateParentState: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : '', React.createElement(Incrementor, {\n      property_name: \"amount\",\n      updateParent: this.updateProduct,\n      value: amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"product__page__add__btn\",\n      onClick: () => this.addProduct(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"ADD TO CART\"))))) : '';\n  }\n\n}\n\nfunction mapStateToProps({\n  cart_reducer\n}) {\n  return {\n    cart_reducer\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(ProductPage));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/components/product-page/ProductPage.jsx"],"names":["React","Component","withRouter","products_data","connect","actions","Incrementor","SelectBox","StatusPopup","CheckCircleOutlineOutlinedIcon","BreadCrumbs","Fade","ProductPage","constructor","setProduct","product_id","window","scrollTo","type","product","Object","entries","forEach","key","value","filter","m","id","setState","updateProduct","name","state","amount","product_to_add","JSON","parse","stringify","updateState","closePopup","added","addProduct","cart_list","props","cart_reducer","size","selected_size","addCartProducts","error","componentDidMount","match","params","componentWillReceiveProps","nextProps","render","img_loaded","title","img","opacity","price","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport products_data from '../../data/data';\nimport { connect } from 'react-redux'\nimport * as actions from '../../actions/actions'\nimport './product-page.css'\nimport Incrementor from '../parts/incrementor/Incrementor';\nimport SelectBox from '../parts/selectbox/SelectBox';\nimport StatusPopup from '../parts/add-success/StatusPopup';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport BreadCrumbs from '../parts/bread-crumbs/BreadCrumbs';\nimport Fade from 'react-reveal/Fade';\n\n\nclass ProductPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            amount: 1\n        }\n    }\n\n\n\n    componentDidMount() {\n        const product_id = this.props.match.params.product_id\n        this.setProduct(product_id)\n    }\n\n\n    setProduct = (product_id) => {\n        window.scrollTo(0,0)\n        let type = ''\n        let product\n        if (product_id) {\n            Object.entries(products_data).forEach(([key, value]) => {\n                value.filter(m => {\n                    if (m.id === product_id) {\n                        type = key\n                        product = m\n                        product['amount'] = 1\n                        this.setState({\n                            type,\n                            product,\n                            product_id\n                        })\n                    }\n                })\n            })\n        }\n    }\n\n\n    updateProduct = (name, value) => {\n        const { product } = this.state\n        if (name === 'amount') {\n            this.setState({\n                amount: value\n            })\n        } else {\n            let product_to_add = JSON.parse(JSON.stringify(product))\n            product_to_add[name] = value\n            this.setState({\n                product: product_to_add\n            })\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        const { product_id } = this.state\n        if (nextProps.match.params.product_id !== product_id) {\n            this.setProduct(nextProps.match.params.product_id)\n        }\n    }\n    updateState = (name, value) => {\n        this.setState({\n            [name]: value\n        })\n    }\n\n    closePopup = () => {\n        this.setState({\n            added: false,\n             amount: 1\n        })\n    }\n    addProduct = () => {\n        const { product, amount } = this.state\n        const { cart_list } = this.props.cart_reducer\n        let product_to_add = JSON.parse(JSON.stringify(product))\n        product_to_add['amount'] = amount\n        if (product.size && product.selected_size) {\n            this.props.addCartProducts(product, cart_list, amount)\n            this.setState({\n                added: true\n            })\n            this.updateProduct('selected_size', '')\n        } else {\n            this.setState({\n                error: true\n            })\n        }\n        if (!product.size) {\n            this.props.addCartProducts(product, cart_list, amount)\n            this.setState({\n                added: true,\n\n            })\n            this.updateProduct('selected_size', '')\n        }\n\n    }\n    render() {\n        const { error, product, amount, added , img_loaded} = this.state\n        return (\n            product ? <div className='product__page'>\n                <BreadCrumbs\n                    product_name={product.title}\n                />\n                <StatusPopup\n                    with_overlay={true}\n                    title='Product added to cart'\n                    handleFunction={this.closePopup}\n                    svg={<CheckCircleOutlineOutlinedIcon />}\n                    button_text='CLOSE'\n                    active={added}\n                />\n                <div className='product__page__content flex__center'>\n                   <Fade clear>\n                   <figure className='product__page__img'>\n                        <img src={product.img} alt=\"\" \n                        style ={{\n                            opacity:img_loaded ? 1 : 0\n                        }}\n                        onLoad = {() => this.setState({\n                            img_loaded:true\n                        })}\n                        />\n                          <aside\n                                id={img_loaded ? 'figure__img__loader--disabled'  :''}\n                                className='figure__img__loader'></aside>\n                    </figure>\n                   </Fade>\n                   <Fade clear>\n                    <section className='product__page__details'>\n                     \n                       <h3>{product.title}</h3>\n                      \n                   \n                     <h4>{`$${product.price}`}</h4>\n                    \n                        {product.size ? \n                            <SelectBox\n                            property_name='selected_size'\n                            value={product.selected_size}\n                            select={this.updateProduct}\n                            options={product.size ? product.size : []}\n                            error={error}\n                            updateParentState={this.updateState}\n                        /> : ''}\n                      \n                       <Incrementor\n                            property_name='amount'\n                            updateParent={this.updateProduct}\n                            value={amount}\n                        />\n                      \n                      \n                       <button\n                            className='product__page__add__btn'\n                            onClick={() => this.addProduct()}>ADD TO CART</button>\n                      \n\n                    </section>\n                    </Fade>\n                </div>\n            </div> : ''\n        );\n    }\n}\n\n\nfunction mapStateToProps({ cart_reducer }) {\n    return { cart_reducer }\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(ProductPage))\n"]},"metadata":{},"sourceType":"module"}