{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/tennis-shop/client/src/components/products/parts/CartPopup.jsx\";\nimport React, { Component } from 'react';\nimport SelectBox from '../../parts/selectbox/SelectBox';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../actions/actions';\nimport { withRouter } from 'react-router-dom';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport StatusPopup from '../../parts/add-success/StatusPopup';\n\nclass CartPopup extends Component {\n  constructor() {\n    super();\n\n    this.updateProduct = (name, value) => {\n      const state_product = this.state.state_product;\n      let new_product = state_product;\n      new_product[name] = value;\n      this.setState({\n        state_product: new_product\n      });\n    };\n\n    this.addProduct = state_product => {\n      const cart_list = this.props.cart_reducer.cart_list;\n\n      if (state_product.size && state_product.selected_size) {\n        this.props.addCartProducts(state_product, cart_list);\n        this.setState({\n          added: true\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n\n      if (!state_product.size) {\n        this.props.addCartProducts(state_product, cart_list);\n        this.setState({\n          added: true\n        });\n      }\n    };\n\n    this.updateState = (name, error) => {\n      this.setState({\n        [name]: error\n      });\n    };\n\n    this.closePopup = () => {\n      this.props.hideAddProductPopup();\n    };\n\n    this.state = {\n      added: false\n    };\n  }\n\n  componentDidMount() {\n    const product = this.props.product;\n    let state_product = JSON.parse(JSON.stringify(product));\n    this.setState({\n      state_product\n    });\n    setTimeout(() => {\n      this.setState({\n        loaded: true\n      });\n    }, 50);\n  }\n\n  render() {\n    const _this$state = this.state,\n          state_product = _this$state.state_product,\n          loaded = _this$state.loaded,\n          error = _this$state.error,\n          added = _this$state.added;\n    return state_product ? React.createElement(\"div\", {\n      id: loaded ? 'cart__popup--active' : '',\n      className: \"cart__popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(StatusPopup, {\n      with_overlay: false,\n      title: \"Product added to cart\",\n      handleFunction: this.closePopup,\n      svg: React.createElement(CheckCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      button_text: \"CLOSE\",\n      active: added,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"overlay\",\n      onClick: () => this.props.hideAddProductPopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: added ? 'cart__popup__content--blurred' : '',\n      className: \"cart__popup__content flex__between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: state_product.img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"cart__popup__content__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, state_product.title), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"$\".concat(state_product.price)), state_product.size ? React.createElement(SelectBox, {\n      property_name: \"selected_size\",\n      value: state_product.selected_size,\n      select: this.updateProduct,\n      options: state_product.size,\n      error: error,\n      updateParentState: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : '', React.createElement(\"span\", {\n      className: \"cart__popup__actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.addProduct(state_product),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"ADD\"), React.createElement(\"button\", {\n      onClick: () => this.props.hideAddProductPopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"CLOSE\"))))) : '';\n  }\n\n}\n\nfunction mapStateToProps({\n  cart_reducer\n}) {\n  return {\n    cart_reducer\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(CartPopup));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/components/products/parts/CartPopup.jsx"],"names":["React","Component","SelectBox","connect","actions","withRouter","CheckCircleOutlineOutlinedIcon","StatusPopup","CartPopup","constructor","updateProduct","name","value","state_product","state","new_product","setState","addProduct","cart_list","props","cart_reducer","size","selected_size","addCartProducts","added","error","updateState","closePopup","hideAddProductPopup","componentDidMount","product","JSON","parse","stringify","setTimeout","loaded","render","img","title","price","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,8BAAP,MAA2C,+CAA3C;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAGA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,WAAW,GAAG;AACV;;AADU,SAmBdC,aAnBc,GAmBE,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAA,YACrBC,aADqB,GACH,KAAKC,KADF,CACrBD,aADqB;AAE7B,UAAIE,WAAW,GAAGF,aAAlB;AACAE,MAAAA,WAAW,CAACJ,IAAD,CAAX,GAAoBC,KAApB;AAEA,WAAKI,QAAL,CAAc;AACVH,QAAAA,aAAa,EAAEE;AADL,OAAd;AAGH,KA3Ba;;AAAA,SA6BdE,UA7Bc,GA6BAJ,aAAD,IAAmB;AAAA,YACpBK,SADoB,GACN,KAAKC,KAAL,CAAWC,YADL,CACpBF,SADoB;;AAE5B,UAAIL,aAAa,CAACQ,IAAd,IAAsBR,aAAa,CAACS,aAAxC,EAAuD;AACnD,aAAKH,KAAL,CAAWI,eAAX,CAA2BV,aAA3B,EAA0CK,SAA1C;AACA,aAAKF,QAAL,CAAc;AACVQ,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH,OALD,MAKO;AACH,aAAKR,QAAL,CAAc;AACVS,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;;AACD,UAAI,CAACZ,aAAa,CAACQ,IAAnB,EAAyB;AACrB,aAAKF,KAAL,CAAWI,eAAX,CAA2BV,aAA3B,EAA0CK,SAA1C;AACA,aAAKF,QAAL,CAAc;AACVQ,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;AACJ,KA/Ca;;AAAA,SAiDdE,WAjDc,GAiDA,CAACf,IAAD,EAAOc,KAAP,KAAiB;AAC3B,WAAKT,QAAL,CAAc;AACV,SAACL,IAAD,GAAQc;AADE,OAAd;AAGH,KArDa;;AAAA,SAuDdE,UAvDc,GAuDD,MAAM;AACf,WAAKR,KAAL,CAAWS,mBAAX;AACH,KAzDa;;AAEV,SAAKd,KAAL,GAAa;AACTU,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDK,EAAAA,iBAAiB,GAAG;AAAA,UACRC,OADQ,GACI,KAAKX,KADT,CACRW,OADQ;AAEhB,QAAIjB,aAAa,GAAGkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,OAAf,CAAX,CAApB;AACA,SAAKd,QAAL,CAAc;AACVH,MAAAA;AADU,KAAd;AAGAqB,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKlB,QAAL,CAAc;AACVmB,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAJS,EAIP,EAJO,CAAV;AAKH;;AA0CDC,EAAAA,MAAM,GAAG;AAAA,wBAC2C,KAAKtB,KADhD;AAAA,UACGD,aADH,eACGA,aADH;AAAA,UACkBsB,MADlB,eACkBA,MADlB;AAAA,UAC0BV,KAD1B,eAC0BA,KAD1B;AAAA,UACiCD,KADjC,eACiCA,KADjC;AAEL,WACIX,aAAa,GAAG;AACZ,MAAA,EAAE,EAAEsB,MAAM,GACN,qBADM,GACkB,EAFhB;AAGZ,MAAA,SAAS,EAAC,aAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIZ,oBAAC,WAAD;AACI,MAAA,YAAY,EAAE,KADlB;AAEI,MAAA,KAAK,EAAC,uBAFV;AAGI,MAAA,cAAc,EAAE,KAAKR,UAHzB;AAII,MAAA,GAAG,EAAE,oBAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJT;AAKI,MAAA,WAAW,EAAC,OALhB;AAMI,MAAA,MAAM,EAAEH,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJY,EAYZ;AAAS,MAAA,SAAS,EAAC,SAAnB;AACI,MAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWS,mBAAX,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZY,EAiBZ;AACI,MAAA,EAAE,EAAEJ,KAAK,GAAG,+BAAH,GAAqC,EADlD;AAEI,MAAA,SAAS,EAAC,oCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAK,MAAA,GAAG,EAAEX,aAAa,CAACwB,GAAxB;AAA6B,MAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAJJ,EAKI;AACI,MAAA,SAAS,EAAC,+BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKxB,aAAa,CAACyB,KAAnB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASzB,aAAa,CAAC0B,KAAvB,EAJJ,EAKK1B,aAAa,CAACQ,IAAd,GAAqB,oBAAC,SAAD;AAClB,MAAA,aAAa,EAAC,eADI;AAElB,MAAA,KAAK,EAAER,aAAa,CAACS,aAFH;AAGlB,MAAA,MAAM,EAAE,KAAKZ,aAHK;AAIlB,MAAA,OAAO,EAAEG,aAAa,CAACQ,IAJL;AAKlB,MAAA,KAAK,EAAEI,KALW;AAMlB,MAAA,iBAAiB,EAAE,KAAKC,WANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAOI,EAZT,EAcI;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKT,UAAL,CAAgBJ,aAAhB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKM,KAAL,CAAWS,mBAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CAdJ,CALJ,CAjBY,CAAH,GA4CJ,EA7Cb;AA+CH;;AA7G6B;;AAiHlC,SAASY,eAAT,CAAyB;AAAEpB,EAAAA;AAAF,CAAzB,EAA2C;AACvC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH;;AAED,eAAef,UAAU,CAACF,OAAO,CAACqC,eAAD,EAAkBpC,OAAlB,CAAP,CAAkCI,SAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport SelectBox from '../../parts/selectbox/SelectBox';\nimport { connect } from 'react-redux'\nimport * as actions from '../../../actions/actions'\nimport { withRouter } from 'react-router-dom';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport StatusPopup from '../../parts/add-success/StatusPopup';\n\n\nclass CartPopup extends Component {\n    constructor() {\n        super()\n        this.state = {\n            added: false\n        }\n    }\n    componentDidMount() {\n        const { product } = this.props\n        let state_product = JSON.parse(JSON.stringify(product))\n        this.setState({\n            state_product\n        })\n        setTimeout(() => {\n            this.setState({\n                loaded: true\n            })\n        }, 50);\n    }\n\n    updateProduct = (name, value) => {\n        const { state_product } = this.state\n        let new_product = state_product\n        new_product[name] = value\n\n        this.setState({\n            state_product: new_product\n        })\n    }\n\n    addProduct = (state_product) => {\n        const { cart_list } = this.props.cart_reducer\n        if (state_product.size && state_product.selected_size) {\n            this.props.addCartProducts(state_product, cart_list)\n            this.setState({\n                added: true\n            })\n        } else {\n            this.setState({\n                error: true\n            })\n        }\n        if (!state_product.size) {\n            this.props.addCartProducts(state_product, cart_list)\n            this.setState({\n                added: true\n            })\n        }\n    }\n\n    updateState = (name, error) => {\n        this.setState({\n            [name]: error\n        })\n    }\n\n    closePopup = () => {\n        this.props.hideAddProductPopup()\n    }\n\n    render() {\n        const { state_product, loaded, error, added } = this.state\n        return (\n            state_product ? <div\n                id={loaded ?\n                    'cart__popup--active' : ''}\n                className='cart__popup'>\n                <StatusPopup\n                    with_overlay={false}\n                    title='Product added to cart'\n                    handleFunction={this.closePopup}\n                    svg={<CheckCircleOutlineOutlinedIcon />}\n                    button_text='CLOSE'\n                    active={added}\n                />\n                <section className=\"overlay\"\n                    onClick={() => this.props.hideAddProductPopup()}\n                >\n\n                </section>\n                <div\n                    id={added ? 'cart__popup__content--blurred' : ''}\n                    className='cart__popup__content flex__between'>\n\n                    <figure><img src={state_product.img} alt=\"\" /></figure>\n                    <section\n                        className='cart__popup__content__details'\n                    >\n                        <h3>{state_product.title}</h3>\n                        <h2>{`$${state_product.price}`}</h2>\n                        {state_product.size ? <SelectBox\n                            property_name='selected_size'\n                            value={state_product.selected_size}\n                            select={this.updateProduct}\n                            options={state_product.size}\n                            error={error}\n                            updateParentState={this.updateState}\n                        /> : ''}\n\n                        <span className='cart__popup__actions'>\n                            <button\n\n                                onClick={() => this.addProduct(state_product)}>ADD</button>\n                            <button onClick={() => this.props.hideAddProductPopup()}>CLOSE</button>\n                        </span>\n                    </section>\n                </div>\n            </div> : ''\n        );\n    }\n}\n\n\nfunction mapStateToProps({ cart_reducer }) {\n    return { cart_reducer }\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(CartPopup))"]},"metadata":{},"sourceType":"module"}