{"ast":null,"code":"import _slicedToArray from\"/Users/denis/Desktop/projects/tennis-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as queryString from'query-string';export var queryParamsToObject=function queryParamsToObject(params){var obj=queryString.parse(params);Object.entries(obj).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];obj[key]=Array.isArray(value)?value:[value];});return obj;};export var objectToQueryParams=function objectToQueryParams(obj){var string='?';string+=queryString.stringify(obj);return string;};export var buildFilterQuery=function buildFilterQuery(filter){var query={};for(var keys in filter){if(filter[keys].constructor===Array&&filter[keys].length>0){query[keys]=filter[keys];}}return query;};export var filterList=function filterList(data,query){var filteredData=data.filter(function(item){var _loop=function _loop(key){if(item[key]===undefined){return{v:false};}if(!Array.isArray(item[key])){if(!query[key].includes(item[key])){return{v:false};}}if(Array.isArray(item[key])){if(!item[key].some(function(r){return query[key].indexOf(r)>=0;})){return{v:false};}}};for(var key in query){var _ret=_loop(key);if(typeof _ret===\"object\")return _ret.v;}return true;});return filteredData;};","map":{"version":3,"sources":["/Users/denis/Desktop/projects/tennis-shop/client/src/functions/functions.js"],"names":["queryString","queryParamsToObject","params","obj","parse","Object","entries","map","key","value","Array","isArray","objectToQueryParams","string","stringify","buildFilterQuery","filter","query","keys","constructor","length","filterList","data","filteredData","item","undefined","includes","some","r","indexOf"],"mappings":"uKACA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,cAA7B,CAGA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAY,CAC3C,GAAIC,CAAAA,GAAG,CAAGH,WAAW,CAACI,KAAZ,CAAkBF,MAAlB,CAAV,CACAG,MAAM,CAACC,OAAP,CAAeH,GAAf,EAAoBI,GAApB,CAAwB,cAAkB,kCAAhBC,GAAgB,UAAXC,KAAW,UACtCN,GAAG,CAACK,GAAD,CAAH,CAAWE,KAAK,CAACC,OAAN,CAAcF,KAAd,EAAuBA,KAAvB,CAA+B,CAACA,KAAD,CAA1C,CAEH,CAHD,EAIA,MAAON,CAAAA,GAAP,CAEH,CARM,CAUP,MAAO,IAAMS,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACT,GAAD,CAAS,CACxC,GAAIU,CAAAA,MAAM,CAAG,GAAb,CACAA,MAAM,EAAIb,WAAW,CAACc,SAAZ,CAAsBX,GAAtB,CAAV,CACA,MAAOU,CAAAA,MAAP,CACH,CAJM,CAOP,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAAY,CACxC,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,IAAT,GAAiBF,CAAAA,MAAjB,CAAyB,CACrB,GAAIA,MAAM,CAACE,IAAD,CAAN,CAAaC,WAAb,GAA6BT,KAA7B,EAAsCM,MAAM,CAACE,IAAD,CAAN,CAAaE,MAAb,CAAsB,CAAhE,CAAmE,CAC/DH,KAAK,CAACC,IAAD,CAAL,CAAcF,MAAM,CAACE,IAAD,CAApB,CACH,CACJ,CACD,MAAOD,CAAAA,KAAP,CACH,CARM,CAWP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOL,KAAP,CAAiB,CACvC,GAAMM,CAAAA,YAAY,CAAGD,IAAI,CAACN,MAAL,CAAY,SAACQ,IAAD,CAAU,0BAC9BhB,GAD8B,EAEnC,GAAIgB,IAAI,CAAChB,GAAD,CAAJ,GAAciB,SAAlB,CAA6B,CACzB,SAAO,KAAP,EACH,CACD,GAAI,CAACf,KAAK,CAACC,OAAN,CAAca,IAAI,CAAChB,GAAD,CAAlB,CAAL,CAA+B,CAC3B,GAAI,CAACS,KAAK,CAACT,GAAD,CAAL,CAAWkB,QAAX,CAAoBF,IAAI,CAAChB,GAAD,CAAxB,CAAL,CAAqC,CACjC,SAAO,KAAP,EACH,CACJ,CACD,GAAIE,KAAK,CAACC,OAAN,CAAca,IAAI,CAAChB,GAAD,CAAlB,CAAJ,CAA8B,CAC1B,GAAG,CAACgB,IAAI,CAAChB,GAAD,CAAJ,CAAUmB,IAAV,CAAe,SAAAC,CAAC,QAAGX,CAAAA,KAAK,CAACT,GAAD,CAAL,CAAWqB,OAAX,CAAmBD,CAAnB,GAAyB,CAA5B,EAAhB,CAAJ,CAAmD,CAC/C,SAAO,KAAP,EACH,CACJ,CAdkC,EACvC,IAAK,GAAIpB,CAAAA,GAAT,GAAgBS,CAAAA,KAAhB,CAAuB,gBAAdT,GAAc,0CAetB,CACD,MAAO,KAAP,CACH,CAlBoB,CAArB,CAmBA,MAAOe,CAAAA,YAAP,CACH,CArBM","sourcesContent":["\nimport * as queryString from 'query-string'\n\n\nexport const queryParamsToObject = (params) => {\n    let obj = queryString.parse(params);\n    Object.entries(obj).map(([key, value]) => {\n        obj[key] = Array.isArray(value) ? value : [value]\n\n    })\n    return obj\n\n}\n\nexport const objectToQueryParams = (obj) => {\n    let string = '?'\n    string += queryString.stringify(obj);\n    return string\n}\n\n\nexport const buildFilterQuery = (filter) => {\n    let query = {};\n    for (let keys in filter) {\n        if (filter[keys].constructor === Array && filter[keys].length > 0) {\n            query[keys] = filter[keys];\n        }\n    }\n    return query\n}\n\n\nexport const filterList = (data, query) => {\n    const filteredData = data.filter((item) => {\n        for (let key in query) {\n            if (item[key] === undefined) {\n                return false;\n            }\n            if (!Array.isArray(item[key])) {\n                if (!query[key].includes(item[key])) {\n                    return false;\n                }\n            }\n            if (Array.isArray(item[key])) {\n                if(!item[key].some(r=> query[key].indexOf(r) >= 0)){\n                    return false\n                }\n            }\n\n        }\n        return true;\n    });\n    return filteredData\n}\n\n"]},"metadata":{},"sourceType":"module"}